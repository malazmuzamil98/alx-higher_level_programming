--check-hash-based-pycs always|default|never: control how Python invalidates hash-based .pyc files
-B : don't write .pyc files on import; also PYTHONDONTWRITEBYTECODE=x
-E : ignore PYTHON* environment variables (such as PYTHONPATH)
-I : isolate Python from the user's environment (implies -E and -s)
-O : remove assert and __debug__-dependent statements; add .opt-1 before .pyc extension; also PYTHONOPTIMIZE=x
-OO : do -O changes and also discard docstrings; add .opt-2 before .pyc extension
-S : don't imply 'import site' on initialization
-V : print the Python version number and exit (also --version) when given twice, print more information about the build
-W arg : warning control; arg is action:message:category:module:lineno also PYTHONWARNINGS=arg
-X opt : set implementation-specific option. The following options are available:
-b : issue warnings about str(bytes_instance), str(bytearray_instance) and comparing bytes/bytearray with str. (-bb: issue errors)
-c cmd : program passed in as string (terminates option list)
-d : turn on parser debugging output (for experts only, only works on debug builds); also PYTHONDEBUG=x
-h : print this help message and exit (also -? or --help)
-i : inspect interactively after running script; forces a prompt even if stdin does not appear to be a terminal; also PYTHONINSPECT=x
-m mod : run library module as a script (terminates option list)
-q : don't print version and copyright messages on interactive startup
-s : don't add user site directory to sys.path; also PYTHONNOUSERSITE
-u : force the stdout and stderr streams to be unbuffered; this option has no effect on stdin; also PYTHONUNBUFFERED=x
-v : verbose (trace import statements); also PYTHONVERBOSE=x can be supplied multiple times to increase verbosity
-x : skip first line of source, allowing use of non-Unix forms of #!cmd
